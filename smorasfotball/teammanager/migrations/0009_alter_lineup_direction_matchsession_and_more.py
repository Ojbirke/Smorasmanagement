# Generated by Django 5.1.7 on 2025-03-26 22:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('teammanager', '0008_lineup_direction'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='lineup',
            name='direction',
            field=models.CharField(choices=[('LR', 'Playing from Left (GK Left)'), ('RL', 'Playing from Right (GK Right)')], default='LR', help_text='Direction of play (LR=GK on left, RL=GK on right)', max_length=2),
        ),
        migrations.CreateModel(
            name='MatchSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name for this match session (e.g., 'Game Day 1')", max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('periods', models.PositiveSmallIntegerField(default=2, help_text='Number of periods in the match')),
                ('period_length', models.PositiveSmallIntegerField(default=25, help_text='Length of each period in minutes')),
                ('substitution_interval', models.PositiveSmallIntegerField(default=5, help_text='Time between substitutions in minutes')),
                ('is_active', models.BooleanField(default=False, help_text='Whether this session is currently active')),
                ('start_time', models.DateTimeField(blank=True, help_text='When the match actually started', null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='match_sessions', to=settings.AUTH_USER_MODEL)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='teammanager.match')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerSubstitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When the substitution was made')),
                ('minute', models.PositiveSmallIntegerField(help_text='Match minute when substitution occurred')),
                ('period', models.PositiveSmallIntegerField(default=1, help_text='Match period when substitution occurred')),
                ('notes', models.CharField(blank=True, max_length=200, null=True)),
                ('match_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substitutions', to='teammanager.matchsession')),
                ('player_in', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substitutions_in', to='teammanager.player')),
                ('player_out', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substitutions_out', to='teammanager.player')),
            ],
        ),
        migrations.CreateModel(
            name='PlayingTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minutes_played', models.PositiveSmallIntegerField(default=0, help_text='Total minutes played in this match')),
                ('last_substitution_time', models.DateTimeField(blank=True, help_text='Last time this player was involved in a substitution', null=True)),
                ('is_on_pitch', models.BooleanField(default=False, help_text='Whether the player is currently on the pitch')),
                ('match_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playing_times', to='teammanager.matchsession')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_playing_times', to='teammanager.player')),
            ],
            options={
                'unique_together': {('match_session', 'player')},
            },
        ),
    ]
